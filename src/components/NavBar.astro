---
import Logo from '../svg/logo_big.svg';
import LogoSmall from '../svg/logo_small.svg';
import { Icon } from 'astro-icon/components';
import { glob, globSync, globStream, globStreamSync, Glob } from 'glob'
import sitemapJSON from '../data/site.json'
import ModelsRow from './ModelsRow.astro';
import type { Link, Product, Category, Sitemap } from '../types/common';
import Drawer from './Drawer.astro';
import { getCatalogLinks, getCategoryLinks } from '../utils/productUtils';
import { url } from 'inspector';

// let catalogLinks = []
const catalogLinks = await getCatalogLinks();

let links = [
  {
    url:`${import.meta.env.BASE_URL}/Стальные панельные радиаторы`,
    text:"Стальные панельные радиаторы",
    links:getCategoryLinks("Стальные панельные радиаторы")
  },
  {
    url:``,
    text:"Конвекторы",
    links:[
      {
        url:`${import.meta.env.BASE_URL}/Напольные конвекторы Step`,
        text:"Напольные конвекторы Step",
        // links:`${import.meta.env.BASE_URL}/Стальные панельные радиаторы`
      },
      {
        url:`${import.meta.env.BASE_URL}/Внутрипольные конвекторы Comfort`,
        text:"Внутрипольные конвекторы Comfort",
        // links:`${import.meta.env.BASE_URL}/Стальные панельные радиаторы`
      },
      {
        url:`${import.meta.env.BASE_URL}/Внутрипольные конвекторы Comfort Turbo`,
        text:"Внутрипольные конвекторы Comfort Turbo",
        // links:`${import.meta.env.BASE_URL}/Стальные панельные радиаторы`
      },
    ]
  }

] as Link[];
// const sitemap = sitemapJSON as any as Sitemap;

// for (const key in sitemap as any as Sitemap) {
//         const category = sitemap[key] as Category
//         if (sitemap.hasOwnProperty(key)) {
//             const products = category.products as Product[];
//             const url = `${import.meta.env.BASE_URL}/${key}`

//             let models = [...new Set(products.map(product => product['Модель']))];
            
//             const models_ = models.map((model)=>{
//               return {url:`${import.meta.env.BASE_URL}/Каталог/${key}/${model}`,text:model} as any as Link
//             })
//             const link = {url:`${url}`,text:key, links:models_} as any as Link;
//             catalogLinks.push(link);
//         }
// }
const currentURL = new URL(Astro.request.url).pathname;
const mainpage = currentURL==="/";

const {class:className,...attr} = Astro.props;
const mainLinks = [
                    {text:"Документация",href:`${import.meta.env.BASE_URL}/Документация`},
                    {text:"Контакты",href:`${import.meta.env.BASE_URL}/Контакты`},
                    {text:"Где купить",href:`${import.meta.env.BASE_URL}/Где купить`},
                  ]

---

<div class="z-50 nav-scroll" class:list={className} {...attr}>
    <div class="relative z-50 flex flex-row items-center justify-between">
      <div class="flex items-center gap-4 nav-left-block">
          <a href=`${import.meta.env.BASE_URL}/` class=`cursor-pointer text-secondary ${mainpage?"pointer-events-none":""}`>
            <Logo class="hidden md:w-32 lg:w-40 lg:block text-primary"/>
            <LogoSmall class="w-16 lg:hidden text-primary"/>
          </a>
          <div class="gap-4 mx-4 md:mx-auto md:flex-col md:gap-2 flex">
              <a class="flex items-center gap-2 text-neutral-700" href="tel:+74996450000">
                  <Icon name="Phone call" class="size-8 md:size-6"/>
                  <div  class="relative text-base font-semibold leading-5 tracking-wider hidden md:block group">
                    <div>8 499 645-00-00</div>
                    <!-- <div class="absolute -top-64 group-hover:-right-full whitespace-nowrap group-hover:top-0 px-4 py-2 bg-primary">Заказать звонок?</div> -->
                </div>
              </a>
              <a class="flex items-center gap-2 text-neutral-700" href="mailto:retail@heaton.ru?subject=Вопрос с сайта">
                  <Icon name="At sign" class="size-8 md:size-6" />
                  <div class="relative text-base font-semibold leading-5 tracking-wider hidden md:block">retail@heaton.ru</div>
              </a>
          </div>
      </div>
    
      <div class="flex items-center gap-8">
        <div class="relative group after:content-[''] after:w-full after:right-0 after:h-[200%] after:bottom-0 after:-z-20 after:text-xs after:absolute hidden lg:block"> 
            <button class="hover:underline_ text-md font-bold leading-5 text-left flex items-center gap-2 text-neutral-700 hover:bg-neutral-50 p-3 pr-8 rounded-3xl">
              <Icon name="catalog" class="size-8 relative rotate-0 group-hover:-rotate-90 transition-transform ease-in-out"/>
              <div class="relative text-base font-black leading-5 tracking-wider
              after:content-['▼'] after:text-xs after:absolute after:-right-4 after:bottom-0.5
              ">Каталог</div>
            </button>

            <ul class="absolute min-w-full bg-neutral-50 rounded-3xl right-0 top-0 -z-10 p-4 pt-16 opacity-0 invisible_ group-hover:opacity-100 group-hover:visible_ transition-transform ease-in-out shadow-xl -translate-y-full  group-hover:translate-y-0   will-change-transform">
              {
                links.map((element:Link)=>(
                    <li class="py-2">
                      <a href={element.url} class="p-2 flex gap-2 flex-row hover:bg-neutral-100 pointer-events-auto cursor-pointer rounded-lg">
                        <Icon name="At sign" class="size-6"/>
                        <span class="whitespace-nowrap block">{element.text}</span>
                      </a>
                      <ModelsRow links={element.links} class="pl-8"/>
                    </li>
                  ))
              }
            </ul>
        </div>
        <div class="relative flex items-center ">
          <Drawer links={links}/>
          <div
            class="hidden lg:flex bg-neutral-50 text-neutral-700 rounded-full pt-1 pr-1 pb-1 pl-4  flex-row gap-4 items-center justify-start shrink-0 relative data-[active]:bg-primary data-[active]:text-primary  group/container data-[active]:shadow-2xl overflow-hidden"
            id="search-container"
          >
            <div
              class="p-2.5 flex flex-row gap-2.5 items-center justify-center shrink-0 relative"
            >
              <ul
                class="relative flex flex-row items-center justify-start gap-6 shrink-0"
              >
                {
                  mainLinks.map((link)=>(
                    <li
                    class="relative text-md font-bold leading-5 text-left"
                    >
                      <a href={link.href} class="hover:underline">{link.text}</a>
                    </li>
                ))}
                
              </ul>
            </div>
            <button
              class="rounded-full bg-primary flex flex-row items-center justify-end shrink-0 right-0 transition-all text-neutral-50 p-3 cursor-pointer  relative data-[active]:right-[calc(100%-40px)] group/btn hover:bg-primary/80"
              id="search-btn"
            >   
                <Icon name="Search" height="24" width="24" class="text-neutral-50 "/>
                <div class="flex flex-row  w-0 transition-all group-data-[active]/btn:w-80 overflow-clip absolute left-12 gap-4">
                  <input type="search" name="main-search" id="main-search-input" class=" focus:outline-none bg-primary opacity-0 text-neutral-50 transition-colors group-data-[active]/btn:shadow-2xl  group-data-[active]/btn:opacity-100 w-[17rem] appearance-none accent-neutral-50 focus:ring-0  focus:border-l-0 focus:border-t-0 focus:border-r-0 focus:border-b-[1px] focus:border-neutral-50">
                </div>
            </button>
            <button class="text-primary p-1 bg-neutral-50 transition-all scale-50 rounded-full absolute invisible opacity-0 right-3 group-data-[active]/container:opacity-100 group-data-[active]/container:scale-100 group-data-[active]/container:visible flex items-center hover:bg-secondary" id="main-search-close"><Icon name="X" height="24" width="24" /></button>
          </div>
  
          <div id="search-result" class="absolute w-full group/result h-0 data-[search-active]:h-fit top-1/2 -z-10 overflow-clip will-change-auto">
            <div class="-translate-y-full relative left-0 w-full -z-10 bg-neutral-50 px-16 pt-12 pb-6 rounded-b-3xl invisible transition-all opacity-0 will-change-contents text-neutral-50
            group-data-[search-active]/result:translate-y-0  
            group-data-[search-active]/result:bg-primary/80  
            group-data-[search-active]/result:opacity-100
            group-data-[search-active]/result:visible 
            backdrop-blur-sm
            ">
              <ul class="w-full ">
                <li><span>1212</span></li>
                <li><a href=`${import.meta.env.BASE_URL}/Документация`>1212</a></li>
                <li>1212</li>
                <li>1212</li>
                <li>1212</li>
              </ul>
            </div>
          </div>
  
        </div>
      </div>
    </div>
  </div>
  
<script >
    // async function startFuse(input: HTMLInputElement,dataMap: Array<any>){
    //   const FuseModule = await import('fuse.js');
    //   const Fuse = FuseModule.default;
    //   const fuse = new Fuse(dataMap, {keys: ['id', 'model', 'power']});
    //   return fuse;
    //   // input.addEventListener('onInput', fuse
    // }
    // offset: ["start end", "end end", "start start", "end start"],


      // SCROLL FOLD
    // import { animate,scroll,stagger, inView } from "motion";
	  // document.addEventListener('astro:page-load', () => {
    //   document.querySelectorAll(".nav-scroll").forEach((section) => {
    //     const header = section.querySelector(".nav-left-block") as HTMLDivElement;
    //     const staggers = section.querySelectorAll(".inview-block") as NodeList;
    //     const sequence = [
    //       [header, { opacity:[0,1],y:[400,0],rotateY:[45,0],rotateZ:[5,0]}, { ease: "linear" ,duration: .4}],
    //       [staggers, { opacity: [0,1], x: [300, 0], rotateY:[-45,0]},{ ease:  "easeInOut", at: .1, duration: .3 }],
          
    //     ];
		// 	scroll(
		// 		animate(
		// 			header, { opacity:[1,.1],x:[0,-200]}, { ease: "linear"}),
		// 		{
		// 			target: section,
		// 			offset: ["0 0", "200px 0"],
		// 		}
		// 	);

		// 	});
    // });
    let radiators = await fetchRadiators();
    async function fetchRadiators() {
      console.log(`Fetched start`);
      const response = await fetch('/heaton/search_map_radiator_power.json'); // Замените на ваш URL
      if (!response.ok) {
        throw new Error('Fail to fetch heaters powers');
      }
      const data = await response.json();
      console.log(`Fetched ${data.length}`);
      return data;
    }

    document.addEventListener('astro:page-load', () => {
      
      const search_btn= document.getElementById("search-btn") as HTMLBaseElement;
      const search_input= document.getElementById("main-search-input") as HTMLInputElement;
      search_btn.addEventListener('click', (e) => openSearch());
      // document.getElementById("main-search-close").addEventListener('click', (e) => closeSearch(e));
      document.addEventListener('keydown', (event) => event.key === "Escape"?closeSearch():"");
      
      search_input.addEventListener('blur', (e) => closeSearch());
      // startFuse(search_input,[{id:'112-3223',model:"C10 2000x300",power:1321},{id:'212-3223',model:"VC10 2000x300",power:321}]);
    });
    function openSearch() {
        const search = document.getElementById("search-btn") as HTMLInputElement;
        const search_cont = document.getElementById("search-container") as HTMLBaseElement;
        const search_input = document.getElementById("main-search-input") as HTMLBaseElement;
        const outputField = document.getElementById("search-result") as HTMLBaseElement;
        search.setAttribute("data-active","");
        // search.toggleAttribute("enabled");
        search_cont.setAttribute("data-active","");
        search_input.setAttribute("data-active","");
        outputField.setAttribute("data-search-active","");
      
        search_input.focus();
        // cont.classList.toggle('active');
    }
    function closeSearch() {
        const search = document.getElementById("search-btn") as HTMLInputElement;
        const search_cont = document.getElementById("search-container") as HTMLBaseElement;
        const search_input = document.getElementById("main-search-input") as HTMLBaseElement;
        const outputField = document.getElementById("search-result") as HTMLBaseElement;
        search.removeAttribute("data-active");
        // search.toggleAttribute("enabled");
        search_cont.removeAttribute("data-active");
        search_input.removeAttribute("data-active");
        outputField.removeAttribute("data-search-active");
        search_input.blur();
        search.blur();
        // cont.classList.toggle('active');
    }
</script>