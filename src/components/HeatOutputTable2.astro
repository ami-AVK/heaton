---
// /Users/santech/Documents/My/WebProjects/Heaton/heaton_/heaton/src/components/HeatOutputTable2.astro
import type { Product } from '../types/common';
import { getUniqueValues } from '../utils/productUtils';

interface Props {
  products: Product[];
}

const { products } = Astro.props;

// 1. Получаем уникальные значения высоты, ширины, длины и типа
const heights = [...new Set(products.map(p => p['Высота, мм']))].sort((a, b) => a - b);
const widths = [...new Set(products.map(p => p['Ширина, мм']))].sort((a, b) => a - b);
const lengths = [...new Set(products.map(p => p['Длина, мм']))].sort((a, b) => a - b);
const types = [...new Set(products.map(p => p['Тип']))].sort((a, b) => String(a).localeCompare(String(b)));

// 2. Создаём карту для быстрого поиска продукта по длине, высоте, ширине и типу
const productMap = new Map<string, Product>();
products.forEach(p => {
  const key = `${p['Длина, мм']}-${p['Высота, мм']}-${p['Ширина, мм']}-${p['Тип']}`;
  productMap.set(key, p);
});

const URL_main = `${import.meta.env.BASE_URL}/`;
const URL_main_catalog = `${URL_main}Каталог/`;

// Функция для выбора экспоненты по ширине
function getExponent(width:number) {
  if (width == 130) return 1.35;
  if (width == 180) return 1.38;
  return 1.3;
}
---

<div class="overflow-x-auto relative sm:rounded-lg">
  <h3 class="text-xl font-bold mb-4 ml-2">Теплоотдача (Вт) при <span class="bg-primary text-neutral-50 px-1">ΔT=<span id="deltaT" class="font-black">70</span>°C</span></h3>
  <table class="w-full text-sm text-left text-neutral-500 border-collapse">
    <thead class="text-xs text-neutral-500 uppercase bg-neutral-50">
      {/* Первая строка: высоты с colspan по количеству ширин */}
      <tr>
        <th scope="col" rowspan="2" class="py-2 px-3 sticky left-0 bg-neutral-100 z-20 border border-neutral-300 align-bottom">
          <div class="flex flex-col items-start">
            <span>Высота<span class="text-neutral-300">→</span></span>
            <span class="font-normal lowercase text-neutral-400 -mt-1">мм</span>
            <hr class="w-full my-1 border-neutral-300"/>
            <span>Длина<span class="text-neutral-300">↓</span> <span class="text-neutral-300">/</span> Ширина<span class="text-neutral-300">→</span></span>
            <span class="font-normal lowercase text-neutral-400 -mt-1">мм</span>
          </div>
        </th>
        {heights.map(height => (
          <th scope="colgroup" colspan={widths.length * types.length} class="py-1 px-2 text-center border border-neutral-300 bg-neutral-100 font-medium text-xs text-neutral-700 ">
            {height}
          </th>
        ))}
      </tr>
      {/* Вторая строка: ширины под каждой высотой, для каждой ширины — типы */}
      <tr>
        {heights.map(height => (
          widths.map(width => (
            types.map(type => (
              <th scope="col" class="py-1 px-2 text-center font-medium text-xs text-neutral-700 border border-neutral-300 bg-neutral-50">
                {width}<br/><span class="text-[10px]">{type}</span>
              </th>
            ))
          ))
        ))}
      </tr>
    </thead>
    <tbody>
      {lengths.map(length => (
        <tr class="border-b border-neutral-200 hover:bg-neutral-50">
          {/* Левый заголовок строки — длина */}
          <th scope="row" class="py-1 px-3 font-medium text-xs text-neutral-700 whitespace-nowrap bg-neutral-100 sticky left-0 z-10 border border-neutral-300">
            {length}
          </th>
          {/* Ячейки: для каждой высоты, ширины и типа */}
          {heights.map(height => (
            widths.map(width => (
              types.map(type => {
                const key = `${length}-${height}-${width}-${type}`;
                const product = productMap.get(key);
                const exponent = getExponent(width);
                return (
                  <td class="text-center border border-neutral-300">
                    {product ? (
                      <a 
                        href={`${URL_main_catalog}${product.url || ''}`} 
                        class="hover:underline cursor-pointer inset-0 py-1 px-3" 
                        title={`Перейти к ${product['Наименование'] || 'продукту'}`}
                        data-power={product['Теплоотдача, Вт']}
                        data-exponent={exponent}
                      >
                        {product['Теплоотдача, Вт'] || '-'}
                      </a>
                    ) : (
                      <span class="text-neutral-400">-</span>
                    )}
                  </td>
                );
              })
            ))
          ))}
        </tr>
      ))}
    </tbody>
  </table>
</div>

<style>
  th.sticky {
    position: -webkit-sticky;
    position: sticky;
  }
  thead th {
    z-index: 15;
  }
  thead th.sticky {
    z-index: 20;
  }
  tbody th.sticky {
    z-index: 10;
  }
  table {
    border-collapse: separate;
    border-spacing: 0;
  }
</style>