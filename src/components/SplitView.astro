---
const { width, image1, image2 } = Astro.props;
---

<style>
  .split-view {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .split-view img {
    width: 100%;
    height: auto;
    display: block;
  }

  .split-view .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    cursor: col-resize;
  }

  .split-view .splitter {
    position: absolute;
    top: 0;
    width: 2px;
    height: 100%;
    background: #fff;
    cursor: col-resize;
  }
</style>

<div class="split-view" style="width: {width}">
  <img src={image1} alt="Image 1" />
  <img src={image2} alt="Image 2" />
  <div class="overlay" id="overlay"></div>
  <div class="splitter" id="splitter"></div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const splitView = document.querySelector('.split-view');
    const overlay = document.getElementById('overlay');
    const splitter = document.getElementById('splitter');

    let isDragging = false;
    let startX;

    const handleMouseDown = (e) => {
      isDragging = true;
      startX = e.pageX - splitter.getBoundingClientRect().left;
      splitter.style.left = `${e.pageX - splitView.getBoundingClientRect().left}px`;
      overlay.style.width = `${e.pageX - splitView.getBoundingClientRect().left}px`;
    };

    const handleMouseMove = (e) => {
      if (!isDragging) return;
      const x = e.pageX - splitView.getBoundingClientRect().left;
      splitter.style.left = `${x}px`;
      overlay.style.width = `${x}px`;
    };

    const handleMouseUp = () => {
      isDragging = false;
    };

    splitter.addEventListener('mousedown', handleMouseDown);
    document.addEventListener('mousemove', handleMouseMove);
    document.addEventListener('mouseup', handleMouseUp);
  });
</script>
