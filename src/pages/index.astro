---
// Component Imports
import NavBar from '../components/NavBar.astro';
import ModelCard from '../components/_ModelCard.astro';
import TSlider from '../components/Inputs/TemperatureSlider.astro';
import LogoSmall from '../svg/logo_small.svg';
import Logo from '../svg/logo_big.svg';
import { Image } from "astro:assets"
import heater from "../img/heater_main.webp"
import top_panel from "../img/top_panel.webp"
import img_models from "../img/models.webp"
import cetrificate from "../img/sertificate.webp"
import { Icon } from 'astro-icon/components';
import '../styles/main.css';
import { glob, globSync, globStream, globStreamSync, Glob } from 'glob'
import { ClientRouter } from 'astro:transitions';
import Footer from '../components/Footer.astro';
import Calculator from '../components/Calculator.astro';
import Button from '../components/ButtonFile.astro';


// Full Astro Component Syntax:
// https://docs.astro.build/basics/astro-components/
const collection = await glob([ "./src/data/**/**/*.csv"]);
const paths = collection.map((file) => ({
    props:{filePath:file.toString(),category: file.split('/')[2],model: file.split('/')[3],type: file.split('/')[4].replace(".csv","")},
  }));
const pathname = `/${paths[0].props.category}/${paths[0].props.model}/${paths[0].props.type}`
console.log(pathname);
---

<html lang="ru" class="scroll-smooth snap-y snap-mandatory">
	<head>
		<meta charset="utf-8" />
		<!-- <meta name="viewport" content="width=device-width" /> -->
		<meta name="viewport" content="width=device-width, height=device-height, minimum-scale=1.0, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href=`${import.meta.env.BASE_URL}/favicon.svg` />
		<!-- <meta name="generator" content={Astro.generator} /> -->
		<title>Heaton</title>
		<ClientRouter/>
	</head>

	<body class="bg-neutral-100">



		<!-- hero -->
		<section class="relative w-full bg-gr-metallic min-h-svh overflow-x-clip snap-center">
			<div class="z-0 py-8 pb-16 container-center">
				<NavBar/>
				<div class="flex flex-col justify-center sm:mt-[15%] ml-4 md:flex-row md:justify-start md:mt-32 md:ml-auto ">
					<div class="flex flex-col z-10 px-[10%] mt-6 sm:mt-24 md:mt-auto md:px-0 relative md:max-w-[40%] gap-4 sm:gap-12 md:my-auto sm:mr-[10%] order-2 md:order-1 lg:ml-16">
						<Logo class="w-56 md:w-72 lg:w-96 md:block text-primary"/>
						<h1 class="text-[22px] md:text-3xl lg:text-4xl font-medium leading-tight -mt-6 lg:-mt-16 tracking-widest uppercase text-neutral-700">
							Стальные<br/>панельные<br/>радиаторы</h1>
						<div class="socials flex gap-4 relative md:translate-y-24 lg:translate-y-36">
							<Icon name="whatsup" class="size-8 md:size-12 text-primary"/>
							<Icon name="telegram" class="size-8 md:size-12 text-primary"/>
							<Icon name="vk" class="size-8 md:size-12 text-primary"/>
							<Icon name="wechat" class="size-8 md:size-12 text-primary"/>
						</div>
						<!-- <h1 class="text-2xl font-black leading-none tracking-widest uppercase text-neutral-700 sm:text-4xl md:text-4xl lg:text-5xl xl:text-6xl sm:header-circle-lg lg:header-circle-xl">
							Стальные панельные радиаторы</h1>
						<p class="w-full text-xl font-light leading-none sm:text-2xl md:text-3xl xl:text-4xl text-neutral-600">
							Высокое качество <br/>по&nbsp;доступной цене
						</p> -->
					</div>
					<div class="relative px-[5%] md:px-0 md:max-w-[70%] z-0 min-h-[40svh] md:h-auto order-1 md:order-2 -bottom-16">
						<div class="absolute -top-[15%] left-1/2 hidden md:block">
							<div class="flex flex-col items-start justify-start gap-1">
								<div class="self-stretch text-base font-normal leading-none text-neutral-700 lg:text-lg lg:leading-none">СООТВЕТСВИЕ</div>
								<div class="self-stretch text-lg font-bold leading-none text-neutral-700 lg:text-xl lg:leading-none">ГОСТ 31311-2005</div>
							</div>
						</div>
						<div class="absolute -bottom-0 h-[120%] w-1/2 -z-10 right-0 sm:-left-8 bg-neutral-100 rounded-tl-[64px] rounded-tr-lg"></div>
						<div class="absolute bottom-16 lg:bottom-24 h-0.5 w-[150%] -z-10 -left-[150%] bg-gradient-to-l from-neutral-50 via-neutral-50/0 to-neutral-50/0 "></div>
						<div class="absolute z-10 w-32 h-32 border-2 rounded-full -right-16 -bottom-16 sm:-left-24 lg:h-48 lg:w-48 lg:-bottom-24 lg:-left-32 bg-neutral-50/30 backdrop-blur-sm border-neutral-50 scroll-scale-fade"></div>
						<div class="relative">
							<div class="relative xl:w-auto">
								<Image alt="" src={heater}/>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>



		<!-- features -->
		<!-- <section class="pb-32 text-left container-center text-neutral-700 snap-start snap-always scroll-mt-32"> -->

			<!--  -->
			<div class="container-center my-16 tracking-widest flex flex-col md:flex-row pb-[10svh] pt-8  scroll-control perspective-1000 snap-center ">
				<div class="flex flex-col items-start py-8 md:py-24 px-6 sm:px-16 bg-neutral-200/40 rounded-br-3xl md:max-w-[calc(50%-6rem)] relative scroll_main_header_fromright transform-gpu ">
					<h2 class="max-w-screen-sm mb-2 text-2xl font-bold tracking-widest sm:mb-8 sm:text-4xl md:text-4xl lg:text-5xl sm:whitespace-nowrap ">Высочайшее качество, <br/>подтвержденное <br/>сертификатом</h2>
					<Button text="Сертификат соответствия" icon="Sertificate" type="download" size=20 link={`${import.meta.env.BASE_URL}/pasports/sertificate.pdf`}/>
					<div class="w-52 absolute bottom-2 rounded-xl hard-shadow before:bg-neutral-100 hidden md:block lg:-bottom-16">
						<Image alt="" src={cetrificate} class=""/>
					</div>
				</div>				
				<div class="relative flex flex-col max-w-xl pt-8 sm:gap-4 sm:pl-12 sm:text-xl md:pt-48 md:pl-32 inview-block">
				
					{
						[
							["Произведены в Турции на заводе c богатейшим опытом","BI__factory",1],
							["Продукция имеет гигиенический сертификат","BI__certificate",2],
							["Высококачественное сырье: холоднокатанная сталь 1,3 мм","BI__steel_width",3],
						]
						.map(([text,icon,index])=>(
							<div class="flex items-center gap-4 p-2 my-2 group scroll-stagger leading-snug sm:leading-normal" >
								<div class="max-w-72 text-primary-700"><Icon name={icon} class="size-16 md:size-20"/></div>
								<h2 class="max-w-lg">{text}</h2>
								{/* <div class="absolute top-0 flex items-center justify-center invisible w-full h-32 text-xs tracking-widest text-center transition-opacity rounded-md opacity-0 left-32 bg-neutral-50 text-neutral-300 group-hover:opacity-100 group-hover:visible">Изображение к «{text}»</div> */}
							</div>
						))
					}
				</div>
				<!-- <LogoSmall class="absolute  -right-20 w-[400px] text-primary/10 -top-12 -z-0"/> -->
			</div>

			<!--  -->
			<div class="container-center relative md:-ml-16 tracking-widest flex flex-col md:flex-row mb-[10svh] md:my-[15svh] scroll-control perspective-1000 items-center justify-center snap-center">
				<div class="relative flex justify-end md:w-1/2 scroll_main_header_fromright">
					<div class="px-12 md:px-0 md:w-[32rem] md:mr-16">
						<div class="w-full relative">
							<Image alt="" src={img_models}/>
							<!-- <div class="absolute z-10 w-32 h-32 border-2 rounded-full -bottom-16 -left-24 lg:h-48 lg:w-48 lg:-bottom-24 lg:-left-32 bg-neutral-50/30 backdrop-blur-sm border-neutral-50 "></div> -->
						</div>
					</div>
				</div>
				<div class="">
					<div class="relative flex flex-col items-start px-16 py-4 sm:py-8 scroll_main_header_fromleft transform-gpu will-change-transform">
						<h2 class="max-w-screen-sm mb-2 text-2xl font-bold tracking-widest sm:mb-8 sm:text-4xl md:text-4xl lg:text-5xl whitespace-nowrap">Широкий <br/>типоразмерный ряд</h2>
						<Button text="Каталог продукции" icon="Sertificate" type="link" size=20 link={`${import.meta.env.BASE_URL}/Стальные панельные радиаторы`}/>
					</div>
					<div class="relative flex flex-col px-8 pt-4 sm:gap-4 sm:text-xl sm:pl-12 inview-block sm:px-0">
						{
							[
								["В комплектацию входит все необходимое для монтажа радиатора на стену","BI__complect"],
								["Максимально быстрые сроки поставки","BI__delivery"],
							]
							.map(([text,icon])=>(
								<div class="flex items-center gap-4 p-2 my-2 group scroll-stagger" >
									<div class="max-w-72 text-primary-700"><Icon name={icon} class="size-16 md:size-20"/></div>
									<h2 class="max-w-lg">{text}</h2>
									{/* <div class="absolute top-0 flex items-center justify-center invisible w-full h-32 text-xs tracking-widest text-center transition-opacity rounded-md opacity-0 left-32 bg-neutral-50 text-neutral-300 group-hover:opacity-100 group-hover:visible">Изображение к «{text}»</div> */}
								</div>
							))
						}
					</div>
				</div>
			</div>

			<!--  -->
			<div class="container-center relative tracking-widest flex flex-col lg:flex-row items-center my-[15svh] min-h-[60svh] scroll-control perspective-1000 mx-auto snap-center ">
				<div class="order-2 lg:w-1/2 inview-scale will-change-transform lg:order-1">
					<div class="relative flex flex-col items-start px-8 py-8 sm:px-16 " >
						<h2 class="max-w-screen-sm mb-8 text-2xl font-extrabold tracking-widest md:text-4xl lg:text-5xl">Верхняя решетка крыловидной формы</h2>
						<p class="leading-loose sm:leading-relaxed sm:text-xl">Форма верхней решетки имеет форму крыла, при такой форме ускоряется поток теплого воздуха через прибор, улучшая теплоотдачу</p>
					</div>
				</div>
				<div class="relative flex justify-end order-1 lg:w-1/2 lg:order-2">
					<div class="mx-8 lg:ml-16">
						<div class="relative scale-125 rounded-l-3xl overflow-clip">
							<Image alt="" src={top_panel}/>
						</div>
					</div>
				</div>
			</div>

			<!--  -->
			<div class="container-center relative  tracking-widest flex flex-col lg:flex-row items-center my-[15svh] min-h-[60svh] scroll-control perspective-1000 mx-auto snap-center">
				<div class="relative flex justify-end lg:w-1/2">
					<div class="mx-8 lg:mr-16">
						<div class="relative">
							<Image alt="" src={heater}/>
						</div>
					</div>
				</div>
				<div class="inview-scale will-change-transform lg:w-1/2 ">
					<div class="relative flex flex-col items-start px-8 py-8 sm:px-16">
						<h2 class="mb-8 text-2xl font-bold tracking-widest md:text-4xl lg:text-5xl lg:max-w-screen-sm">«Технология усечённого канала»</h2>
						<p class="leading-loose sm:text-xl"> Частичное уменьшение сечения первых двух каналов панели радиатора, что способствует равномерному распределению потока теплоносителя по всей длине прибора</p>
					</div>
				</div>
			</div>
		<!-- </section> -->





		<!-- models -->
		<section class="bg-secondary_/30 bg-neutral-300 min-h-svh snap-center overflow-clip relative" id="models">
			
			<div class="flex flex-col items-center gap-16 py-16 md:py-32 container-center text-neutral-600 z-10">
				<h2 class="text-3xl font-semibold md:text-6xl header-circle-lg md:header-circle-xl ">Модели радиаторов</h2>
				<div class="grid grid-cols-1 gap-8 px-4 sm:grid-cols-2 xl:gap-16 lg:grid-cols-4 sm:px-0">
					{
						[
							{
								shortName: "C",
								longName: "Compact",
								sub:null,
								url:`${import.meta.env.BASE_URL}/Стальные панельные радиаторы/Compact (C)/11`,
								characteristics: [
									{ name: "Панели", icon: true },
									{ name: "Рассеиватели", icon: true },
									{ name: "Решетка сверху", icon: true },
									{ name: "Боковое подключение", icon: true }
								]
							},
							{
								shortName: "VC",
								longName: "Ventil Compact",
								sub:null,
								url:`${import.meta.env.BASE_URL}/Стальные панельные радиаторы/Ventil Compact (VC)/11`,
								characteristics: [
									{ name: "Панели", icon: true },
									{ name: "Рассеиватели", icon: true },
									{ name: "Решетка сверху", icon: true },
									{ name: "Нижнее подключение", icon: true }
								]
							},
							{
								shortName: "HC",
								longName: "Compact",
								sub:"Hygiene",
								url:`${import.meta.env.BASE_URL}/Стальные панельные радиаторы/Hygiene Compact (HC)/10`,
								characteristics: [
									{ name: "Панели", icon: true },
									{ name: "Рассеиватели", icon: false },
									{ name: "Решетка сверху", icon: false },
									{ name: "Боковое подключение", icon: true }
								]
							},
							{
								shortName: "HVC",
								longName: "Ventil Compact",
								sub:"Hygiene",
								url:`${import.meta.env.BASE_URL}/Стальные панельные радиаторы/Hygiene Ventil Compact (HVC)/10`,
								characteristics: [
									{ name: "Панели", icon: true },
									{ name: "Рассеиватели", icon: false },
									{ name: "Решетка сверху", icon: false },
									{ name: "Нижнее подключение", icon: true }
								]
							}
						].map((element)=>(
							<ModelCard name={element.longName} shortname={element.shortName} characteristics={element.characteristics} subname={element.sub} url={element.url}/>
						))
					}
				</div>

			</div>
			<LogoSmall class="absolute  -right-10 w-[500px] text-neutral-100/50 -bottom-12 -z-0 -rotate-12"/>
		</section>
		<!-- calculator -->
		 	<Calculator class="snap-center"/>
		
		<Footer class="snap-end"/>
	</body>
</html>

<script >
	import { animate,scroll,stagger, inView } from "motion";
	import Fuse from 'fuse.js'
	let gloabal_fuse;

	async function getHeatersForSearch() {
		const options = {
			includeScore: true,
			minMatchCharLength:3,
			threshold: 0.3,
			// Search in `author` and in `tags` array
			keys: ['Наименование', 'Категория']
		}

		// const fuse = new Fuse(list, options)
		// search_map.json
		const response = await fetch('/heaton/search_map.json') ;
        const data = await response.json();
		gloabal_fuse = new Fuse(data, options);

		let result = gloabal_fuse.search('1200')
		console.log(result);
		result = gloabal_fuse.search('1200 400')
		console.log(result);
		result = gloabal_fuse.search('1200 400 C')
		console.log(result);
		result = gloabal_fuse.search('12C')
		console.log(result);
}

document.addEventListener("searchInputEvent",(e)=>{
	console.log("searchInputEvent");
}) 

document.addEventListener('astro:page-load', () => {
		console.log("astro:page-load main");
		// initCalculator
		// document.dispatchEvent(new CustomEvent('initCalculator', {bubbles:true}));

		// animate("#motion-test",{ scale: [0.4, 1]});
		inView(".inview-block", ({ target }) => {
			const staggers = target.querySelectorAll(".scroll-stagger");
			animate(
				staggers,{ opacity: [0,1], scale:[1.1,1] }, { delay: stagger(0.3, {startDelay: 0.2}) , ease:"easeIn", duration:.6}
			)
        	return () => animate(staggers, { opacity: 0, scale:[1.1]})
    	},
		{ margin: "0px 0px 0px 0px"}
		);
		inView(".inview-scale", ({ target }) => {
			animate(
			target,{ opacity: [0,1], scale:[1.1,1], rotateY:[10,0] }, { delay: stagger(0.3) , ease:"easeIn", duration:.6}
			)
        	return () => animate(target, { opacity: 0, scale:[1.1], rotateY:[30]})
		});

		document.querySelectorAll(".scroll-control").forEach((section ) => {

			const header_from_right = section.querySelector(".scroll_main_header_fromright") as HTMLDivElement;
			const header_from_left = section.querySelector(".scroll_main_header_fromleft") as HTMLDivElement;

			scroll(
				animate(
				section, 
					{ opacity: [0,1]}, 
					{ ease:  "linear"}), 
				{
					target: section,
					offset: ["start end", "end end"],

				}
			);

			scroll(
				animate(
				header_from_right, { opacity:[0,1],x:[200,0]}, { ease: "linear"}),
				{
					target: section,
					offset: ["start end", "end end"],
				}
			);
			scroll(
				animate(
				header_from_left, { opacity:[0,1],x:[-200,0]}, { ease: "linear"}),
				{
					target: section,
					offset: ["start end", "end end"],
				}
			);
			});




	},{once:true});
	
</script>
