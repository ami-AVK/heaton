---
import sitemapJSON from '../../data/site.json'
import type { Product, Category, Sitemap } from '../../types/common';
import DynamicImage from '../../components/ImageDynamic.astro'
import Layout from '../../layouts/main.astro'
import BreadCrumbs from '../../components/BreadCrumbs.astro';
import Hero from '../../components/Hero.astro';
import NavBar from '../../components/NavBar.astro';
import Footer from '../../components/Footer.astro';
import Drawing from '../../components/Drawing.astro';
import Contact from '../../components/Contact.astro';
import { findSimilarProducts, getNavigationLinks } from '../../utils/productUtils';
import ProductCard from '../../components/ProductCard.astro';
import { Image } from "astro:assets"
import heater from "../../img/main_heaters_.webp"
import step from "../../img/step.webp"
import HF_Comfort from "../../img/HF_Comfort.webp"
import ImageDynamic from '../../components/ImageDynamic.astro';

export async function getStaticPaths() {
    let paths=[] as any[]
    const sitemap = sitemapJSON as any as Sitemap;
    for (const key in sitemap as any) {
        const category = sitemap[key] as Category
        if (sitemap.hasOwnProperty(key)) {
            const products = category.products as Product[]
            products.forEach(product => {
                let path_ = {
                            params:{
                                product: product.url
                            },
                            props:{
                                category: key,
                                url:product.url,
                                model:product['Модель'],
                                title: category['Заголовок в карточку'] as string,
                                description: category['Описание в карточку'],
                                product: product as Product,
                            }};
                paths.push(structuredClone(path_));
            });
            
        }
    }
    return paths
}

const {product,category,title,description,url,model} = Astro.props
const imagePath = `/src/images/products/${product['Изображение']}`
const imageAlt = `${category} Heaton ${product['Наименование']}`
const productName = product['Наименование']

const URL_main = `${import.meta.env.BASE_URL}/`
const URL_category = `${URL_main}Каталог/${category}/`
const URL_product = `${URL_category}${productName}`

const height = product['Высота, мм'];
const lenght = product['Длина, мм'];
const depth = product['Глубина, мм'];
const power = product['Теплоотдача, Вт'];
const weight = product['Масса НЕТТО, кг']?product['Масса НЕТТО, кг']:false;
const type = product['Тип']?product['Тип']:false;

const characteristics = [   
                            {header:"Высота:", value:`${height} мм`},
                            {header:"Длина:", value:`${lenght} мм`},
                            {header:"Глубина:", value:`${depth} мм`},
                            {header:"Мощность:", value:`${power} мм`},
                        ]
weight&&characteristics.push({header:"Вес:", value:`${weight} кг`},);
// type&&characteristics.unshift({header:"Тип:", value:`${type}`},)

let extraCharacteristics = [{header:"Тип:", value:`${type} мм`}];


switch (category){
 case 'Стальные панельные радиаторы':
    extraCharacteristics = [
            {header:"Тип:", value:`${type}`},
            {header:"Подключение:", value:`${product['Подключение']}`},
            {header:"Исполнение:", value:`${product['Исполнение']}`},
        ];
    break
 case 'Напольные конвекторы':
    extraCharacteristics = [
            // {header:"Тип:", value:`${type}`},
            // {header:"Подключение:", value:`${product['Подключение']}`},
            // {header:"Исполнение:", value:`${product['Исполнение']}`},
        ];
    break
 case 'Внутрипольные конвекторы':
    extraCharacteristics = [
            {header:"Вентилятор:", value:`${product['Вентилятор']==="Есть"?"ЕС-двигатель":"Отсутствует"}`},
        ];
    break
}




const similarHeight= findSimilarProducts(category,product,'Высота, мм') as Product[];
const similarLenght = findSimilarProducts(category,product,'Длина, мм') as Product[];
const similarDepth = findSimilarProducts(category,product,'Глубина, мм') as Product[];
const similarPower = findSimilarProducts(category,product,'Теплоотдача, Вт') as Product[];
let otherCategorys = getNavigationLinks().map((category)=>{
    category.url = `${import.meta.env.BASE_URL}${category.url}`
    return category
});
otherCategorys = otherCategorys.filter(elem => (
    elem.text != category
    ))
console.log(otherCategorys);

---
<Layout title={title.replace("{Наименование}",productName)} description="Качественные панельные радиаторы от российского бренда" class="snap-y snap-mandatory">
    <div class="snap-center">
        <Hero class="min-h-svh">
            <NavBar slot="navbar" class="mx-auto container-center py-8"/>
            <BreadCrumbs slot="breadcrumbs" class='z-50' list={
                [{url:URL_main, text:"Главная"},{url:URL_category, text:category, links:otherCategorys},{url:URL_product, text:productName}]
                }/>

                <DynamicImage imagePath={imagePath} altText={imageAlt} slot="image" model={model} class='mx-auto w-auto h-auto max-h-[30vh] md:max-h-[70vh]'/>

            
            <Fragment slot="header">
                <h1 class="text-2xl md:text-5xl font-black uppercase tracking-wider mt-4 md:mt-16 px-2">
                    <div class="text-sm md:text-xl whitespace-nowrap leading-none font-normal">{title.replace("{Наименование}","")}</div>
                    <div class="leading-none">{productName}</div>
                </h1>
                <div class="flex flex-col md:items-start justify-between">
                    <ul class="text-base md:text-2xl tracking-wider grid grid-cols-1 md:grid-cols-1 md:gap-2 py-4 md:py-16 font-medium flex-1">
                        {
                            characteristics.map((element) =>(
                                <li class="px-2 py-0.5 md:py-1 rounded-lg overflow-clip">
                                    <span class="md:block text-xs md:text-sm  text-neutral-500 font-normal">{element.header}</span>
                                    <span class="md:block font-black whitespace-nowrap leading-none md:leading-tight text-ellipsis">{element.value}</span>
                                </li>
                            ))
                        }
                    </ul>
                    <div class="overflow-x-scroll ">
                        <ul class="text-base md:text-2xl tracking-wider flex flex-nowrap md:flex-row gap-2 md:gap-4 font-medium ">
                            {
                                extraCharacteristics.map((element) =>(
                                    <li class="bg-primary text-neutral-50 px-2 md:px-3 py-1 rounded-lg overflow-clip">
                                        <span class="text-xs md:text-sm block font-normal">{element.header}</span>
                                        <span class="block font-black whitespace-nowrap leading-none md:leading-none text-ellipsis">{element.value}</span>
                                    </li>
                                ))
                            }
                        </ul>
                    </div>

                </div>
            </Fragment>
    
        </Hero>
        <section class="text-4xl font-black uppercase container-center">
            <!-- <h2>Технические характеристики</h2> -->
            <Drawing width={lenght} height={height} depth={depth}/>
        </section>
    </div>
    
    
   
    <section class="snap-center container-center mx-auto">
		<Contact/>
	</section>
    <section class="container-center snap-center min-h-[40vh] my-32">
        <div class="group" data-type="power">
            <div class="flex flex-col md:flex-row justify-between mb-4 md:mb-16">
                <h2 class="text-2xl md:text-4xl font-black uppercase mb-2">Аналоги</h2>
                <ul class="flex gap-8 text-sm">
                    <li><button class="hover:bg-primary rounded-lg py-1 md:p-2 hover:text-neutral-50 bg-neutral-50 leading-tight" value="power">Похожая мощность</button></li>
                    <li><button class="hover:bg-primary rounded-lg py-1 md:p-2 hover:text-neutral-50 bg-neutral-50 leading-tight" value="height">Похожая высота</button></li>
                    <li><button class="hover:bg-primary rounded-lg py-1 md:p-2 hover:text-neutral-50 bg-neutral-50 leading-tight" value="lenght">Похожая длина</button></li>
                </ul>
            </div>
            <ul class="hidden group-data-[type='power']:grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 gap-6 ">
                {
                    similarPower.map((card) => (
                        <li>
                            <ProductCard product={card} category={category} />
                        </li>
                    ))
                }
            </ul>
            <ul class="hidden group-data-[type='lenght']:grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 gap-6 ">
                {
                    similarLenght.map((card) => (
                        <li>
                            <ProductCard product={card} category={category} />
                        </li>
                    ))
                }
            </ul>
            <ul class="hidden group-data-[type='height']:grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 gap-6 ">
                {
                    similarHeight.map((card) => (
                        <li>
                            <ProductCard product={card} category={category} />
                        </li>
                    ))
                }
            </ul>
        </div>
    </section>
    <section class="container-center snap-center  min-h-[40vh] my-32">
        <h2 class="text-4xl font-black uppercase mb-16">Другие виды отопительного оборудования</h2>
        <ul class="flex flex-col gap-8 lg:gap-16 ">
			{
				[
					{
						"header": "Стальные панельные радиаторы",
						"image": "Стальные панельные радиаторы.webp",
						"text": "Обеспечьте свой дом равномерным и комфортным теплом с нашими стальными панельными радиаторами Heaton. Современный дизайн и высокая эффективность делают их идеальным выбором для любого интерьера. Наслаждайтесь уютом и экономией на отоплении!",
						"url": `${import.meta.env.BASE_URL}/Стальные панельные радиаторы`
					},
					{
						"header": "Напольные конвекторы",
						"image": "Напольные конвекторы.webp",
						"text": "Напольные конвекторы Heaton — это сочетание стиля и функциональности. Быстрое нагревание и мощная циркуляция воздуха обеспечат вам тепло даже в самых холодных условиях. Идеально подходят для офисов и жилых помещений.",
						"reverse":true,
						"url": `${import.meta.env.BASE_URL}/Напольные конвекторы`
					},
					{
						"header": "Внутрипольные конвекторы",
						"image": "Внутрипольные конвекторы.webp",
						"text": "Внутрипольные конвекторы Heaton — это незаметное и эффективное решение для отопления. Они сохраняют пространство и обеспечивают равномерное распределение тепла по всей комнате. Поддерживайте комфортный микроклимат без лишних элементов в интерьере.",
						"url": `${import.meta.env.BASE_URL}/Внутрипольные конвекторы`
					}
				].filter((e)=>e.header!=category).map((element) => (
					<li class="p-2 md:text-lg rounded-3xl relative flex flex-col md:flex-row items-center gap-4 md:gap-16 bg-neutral-50 group hover:bg-primary-10">
						<div class=" drop-shadow-primary-hard-sm md:drop-shadow-primary-hard-lg lg:drop-shadow-primary-hard drop order-1 relative scale-105" class:list={[{"md:order-2":element.reverse}]}>
							<ImageDynamic imagePath={element.image} altText='element.header' />
						</div>
						<div class="order-2 p-4 md:p-8" class:list={[{"md:order-1":element.reverse}]}>
							<h3 class="text-xl mb-6 md:mb-12 md:text-3xl uppercase tracking-wider font-black text-balance md:pl-4">{element.header}</h3>
							<p class="text-balance mb-6 md:mb-14 tracking-widest leading-normal md:leading-relaxed md:pl-4 ">{element.text}</p>
							<a class="px-4 my-2 py-2 text-lg md:text-xl rounded-lg text-neutral-50 bg-primary block text-center md:text-left md:inline-block" href={element.url}>Перейти в раздел</a>
						</div>
					</li>
				))
			}		
		</ul>
    </section>
    <Footer class="mt-auto snap-center"/>
    
</Layout>

<script>
    document.addEventListener('astro:page-load', () => {
        const buttons = document.querySelectorAll('button[value]');
        const container = document.querySelector('.group[data-type]');

        buttons.forEach(button => {
            button.addEventListener('click', () => {
                const value = button.getAttribute('value');
                if (container && value) {
                    container.setAttribute('data-type', value);
                }
            });
        });
    });
</script>
